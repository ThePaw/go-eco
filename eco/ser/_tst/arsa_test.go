package ser

import (
	//	"code.google.com/p/go-eco/eco/aux"
	"fmt"
	"testing"
)
func TestARSA_1(t *testing.T) {
fmt.Println("Testing ARSA: perfect Anti-Robinson matrix")
	a := [][]float64{	// perfect Anti-Robinson matrix
		{0, 3, 4, 9, 10, 16, 17, 49, 64, 81},
		{3, 0, 3, 4, 9, 10, 16, 17, 49, 64},
		{4, 3, 0, 3, 4, 9, 10, 16, 17, 49},
		{9, 4, 4, 0, 3, 4, 9, 10, 16, 17},
		{10, 9, 4, 3, 0, 3, 4, 9, 10, 16},
		{16, 10, 9, 4, 3, 0, 3, 4, 9, 10},
		{17, 16, 10, 9, 4, 3, 0, 3, 4, 9},
		{49, 17, 16, 10, 9, 4, 3, 0, 3, 4},
		{64, 49, 17, 16, 10, 9, 4, 3, 0, 3},
		{81, 64, 49, 17, 16, 10, 9, 4, 3, 0},
}
	known := IntVector{0, 1, 2, 3, 4, 5, 6, 7, 8, 9}
	n := len(a)

	rowPerm := ARSA(n, a, 0.5, 0.1, 20)

	if !rowPerm.IsIdentical(known) {
		fmt.Println("Best permutation: ")
		rowPerm.Print()
		fmt.Println()
		fmt.Println("should be: ")
		known.Print()
		t.Error()
	}
}


func TestARSA_2(t *testing.T) {
fmt.Println("Testing ARSA: not-perfect Anti-Robinson matrix")
	a := [][]float64{
		{0,  5,  4,  9, 81, 16, 15, 49, 64, 20},
		{5,  0,  3,  4,  9, 25, 90, 36, 49, 64},
		{4,  3,  0,  4,  5,  9, 16, 12, 36, 49},
		{9,  4,  4,  0,  6,  4,  9, 16, 25, 36},
		{81, 9,  5,  6,  0,  4,  4,  9, 16, 25},
		{16, 25, 9,  4,  4,  0,  5,  4,  9, 16},
		{15, 90, 16, 9,  4,  5,  0,  3,  4,  9},
		{49, 36, 12, 16, 9,  4,  3,  0,  5,  4},
		{64, 49, 36, 25, 16, 9,  4,  5,  0,  4},
		{20, 64, 49, 36, 25, 16, 9,  4,  4,  0},
	}
	known := IntVector{1, 0, 2, 3, 5, 4, 7, 6, 8, 9}
	n := len(a)

	rowPerm := ARSA(n, a, 0.5, 0.1, 20)

	if !rowPerm.IsIdentical(known) {
		fmt.Println("Best permutation: ")
		rowPerm.Print()
		fmt.Println()
		fmt.Println("should be: ")
		known.Print()
		t.Error()
	}
}


/*
Psych24
{0,0.682,0.597,0.532,0.679,0.665,0.696,0.668,0.674,0.884,0.692,0.686,0.511,0.875,0.762,0.586,0.824,0.632,0.73,0.635,0.631,0.587,0.526,0.718},
{0.682,0,0.683,0.77,0.715,0.766,0.843,0.843,0.805,0.943,0.85,0.855,0.761,0.897,0.869,0.728,0.995,0.745,0.888,0.708,0.694,0.768,0.652,0.789},
{0.597,0.683,0,0.695,0.753,0.732,0.777,0.618,0.816,0.925,0.909,0.86,0.679,0.823,0.935,0.737,0.823,0.789,0.688,0.703,0.835,0.75,0.617,0.797},
{0.532,0.77,0.695,0,0.773,0.673,0.665,0.609,0.675,0.901,0.89,0.84,0.673,0.934,0.873,0.678,0.813,0.749,0.863,0.661,0.651,0.62,0.665,0.752},
{0.679,0.715,0.753,0.773,0,0.378,0.344,0.422,0.277,0.689,0.656,0.785,0.656,0.72,0.771,0.813,0.792,0.737,0.81,0.602,0.682,0.559,0.565,0.58},
{0.665,0.766,0.732,0.673,0.378,0,0.278,0.473,0.286,0.797,0.647,0.905,0.691,0.708,0.749,0.709,0.727,0.833,0.749,0.565,0.737,0.614,0.569,0.567},
{0.696,0.843,0.777,0.665,0.344,0.278,0,0.381,0.315,0.754,0.768,0.819,0.655,0.764,0.828,0.82,0.772,0.841,0.774,0.549,0.686,0.604,0.595,0.563},
{0.668,0.843,0.618,0.609,0.422,0.473,0.381,0,0.468,0.715,0.7,0.729,0.605,0.748,0.825,0.704,0.745,0.75,0.726,0.573,0.638,0.643,0.499,0.612},
{0.674,0.805,0.816,0.675,0.277,0.286,0.315,0.468,0,0.83,0.72,0.887,0.72,0.74,0.752,0.758,0.726,0.792,0.726,0.554,0.734,0.517,0.496,0.576},
{0.884,0.943,0.925,0.901,0.689,0.797,0.754,0.715,0.83,0,0.516,0.415,0.592,0.828,0.846,0.876,0.711,0.683,0.81,0.827,0.595,0.84,0.738,0.469},
{0.692,0.85,0.909,0.89,0.656,0.647,0.768,0.7,0.72,0.516,0,0.572,0.465,0.65,0.76,0.686,0.638,0.65,0.71,0.798,0.601,0.696,0.749,0.588},
{0.686,0.855,0.86,0.84,0.785,0.905,0.819,0.729,0.887,0.415,0.572,0,0.488,0.869,0.827,0.881,0.722,0.651,0.89,0.754,0.645,0.807,0.65,0.586},
{0.511,0.761,0.679,0.673,0.656,0.691,0.655,0.605,0.72,0.592,0.465,0.488,0,0.805,0.861,0.719,0.806,0.677,0.737,0.759,0.575,0.721,0.618,0.642},
{0.875,0.897,0.823,0.934,0.72,0.708,0.764,0.748,0.74,0.828,0.65,0.869,0.805,0,0.63,0.588,0.659,0.799,0.794,0.698,0.817,0.757,0.758,0.696},
{0.762,0.869,0.935,0.873,0.771,0.749,0.828,0.825,0.752,0.846,0.76,0.827,0.861,0.63,0,0.675,0.655,0.666,0.808,0.728,0.768,0.754,0.744,0.835},
{0.586,0.728,0.737,0.678,0.813,0.709,0.82,0.704,0.758,0.876,0.686,0.881,0.719,0.588,0.675,0,0.676,0.656,0.742,0.612,0.652,0.717,0.64,0.738},
{0.824,0.995,0.823,0.813,0.792,0.727,0.772,0.745,0.726,0.711,0.638,0.722,0.806,0.659,0.655,0.676,0,0.552,0.676,0.738,0.827,0.727,0.713,0.674},
{0.632,0.745,0.789,0.749,0.737,0.833,0.841,0.75,0.792,0.683,0.65,0.651,0.677,0.799,0.666,0.656,0.552,0,0.642,0.699,0.643,0.683,0.728,0.595},
{0.73,0.888,0.688,0.863,0.81,0.749,0.774,0.726,0.726,0.81,0.71,0.89,0.737,0.794,0.808,0.742,0.676,0.642,0,0.833,0.669,0.658,0.697,0.626},
{0.635,0.708,0.703,0.661,0.602,0.565,0.549,0.573,0.554,0.827,0.798,0.754,0.759,0.698,0.728,0.612,0.738,0.699,0.833,0,0.587,0.537,0.491,0.634},
{0.631,0.694,0.835,0.651,0.682,0.737,0.686,0.638,0.734,0.595,0.601,0.645,0.575,0.817,0.768,0.652,0.827,0.643,0.669,0.587,0,0.626,0.549,0.552},
{0.587,0.768,0.75,0.62,0.559,0.614,0.604,0.643,0.517,0.84,0.696,0.807,0.721,0.757,0.754,0.717,0.727,0.683,0.658,0.537,0.626,0,0.497,0.625},
{0.526,0.652,0.617,0.665,0.565,0.569,0.595,0.499,0.496,0.738,0.749,0.65,0.618,0.758,0.744,0.64,0.713,0.728,0.697,0.491,0.549,0.497,0,0.566},
{0.718,0.789,0.797,0.752,0.58,0.567,0.563,0.612,0.576,0.469,0.588,0.586,0.642,0.696,0.835,0.738,0.674,0.595,0.626,0.634,0.552,0.625,0.566,0},
*/