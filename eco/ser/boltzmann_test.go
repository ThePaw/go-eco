package ser

import (
	"fmt"
	"testing"
)

func TestBoltzmann(t *testing.T) {
	n := 10
	a := [][]int{
		{0, 3, 4, 9, 10, 16, 17, 49, 64, 81},
		{3, 0, 3, 4, 9, 10, 16, 17, 49, 64},
		{4, 3, 0, 3, 4, 9, 10, 16, 17, 49},
		{9, 4, 4, 0, 3, 4, 9, 10, 16, 17},
		{10, 9, 4, 3, 0, 3, 4, 9, 10, 16},
		{16, 10, 9, 4, 3, 0, 3, 4, 9, 10},
		{17, 16, 10, 9, 4, 3, 0, 3, 4, 9},
		{49, 17, 16, 10, 9, 4, 3, 0, 3, 4},
		{64, 49, 17, 16, 10, 9, 4, 3, 0, 3},
		{81, 64, 49, 17, 16, 10, 9, 4, 3, 0},
	}
	energy := 0
	permute := true
	iSor := make([]int, n)
	iOszlop := make([]int, n)

	e := Boltzmann(n, n, a, iSor, iOszlop, energy, permute)
	for i := 0; i < n; i++ {
		fmt.Printf("%d ", iSor[i]+1)
	}
	fmt.Println("Energy: ", e)
}

// should result:
// 2   1   3   4   6   5   8   7   9  10
/*



	{0, 5, 4, 9, 81, 16, 15, 49, 64, 20},
	{5, 0, 3, 4, 9, 25, 90, 36, 49, 64},
	{4, 3, 0, 4, 5, 9, 16, 12, 36, 49},
	{9, 4, 4, 0, 6, 4, 9, 16, 25, 36},
	{81, 9, 5, 6, 0, 4, 4, 9, 16, 25},
	{16, 25, 9, 4, 4, 0, 5, 4, 9, 16},
	{15, 90, 16, 9, 4, 5, 0, 3, 4, 9},
	{49, 36, 12, 16, 9, 4, 3, 0, 5, 4},
	{64, 49, 36, 25, 16, 9, 4, 5, 0, 4},
	{20, 64, 49, 36, 25, 16, 9, 4, 4, 0},
*/
