run G4-500 on lisal

Check and recalc old pre+impro!!!

!! Implement proportion of pair rank order  !!
+++++++++++++++++++++++++++++++++++++++
Check against original formulas, ask for peer-revision
my are OK


(I)RImpro
=========
/home/pac/live/ext/src/code.google.com/p/ser/cmd/ObjFnPerf/SA/perfectR/impro/my/500


test objFns from Pilhofer against R



DOI: 10.1002/widm.1096
http://ivi.sagepub.com/content/2/2/95.full.pdf+html


!! EffectivenessGain failed!!  ---> designed for block clustering

make constant init cond
test performance of obj fns on different cc-generated (with sampler) Near-Anti-Rob matrices(cmd/ObjFnPerfCC) 


rewrite obj fns fn(dis Matrix64, p IntVector) --> fn(dis Matrix64, p IntVector, isLoss, isDist bool) 

sync imat -mat, ivec - vec
rewrite Sampler type

implement P-Q trees

== in progress
[cejchan@lisal-nvidia ~]Are500 on lisal

== done.
Raw (R, IR) is done!

*implement pair-order matrix
*test robinson_fant.go
*implement dependence of k on ?(ImproLagMax - lag <10) in robinson_fant.go
*re-implement all matrices and vectors using [][], []
*test iRound()
*test matrix rearrangements
*test obj fns
*test mirror vs. C
*gofmt -r 'IsIdentical(x)->Equals(x)' -w -l
*add on-the fly mean and s2
*move /home/pac/live/ext/src/code.google.com/p/ser/cmd/ObjFnPerfCC/* to ./aa
*implement new mutators
*rewrite RobXA to receive initial permutation
*implement local improvement
*test SubMatOpt
*rewrite with type OptMethod3 func(Matrix64, IntVector, ObjFn, bool) (float64)
*test NextPerm()
*test performance of obj fns and mutator combinations on a single Anti-Rob matrix (cmd/ObjFnPerf) nSamp = 30 50 100 250 500
*GARLoss5, 10
*RGARLoss5, 10
*obj fns without impro
*test performance of obj fns on a single Near-Anti-Rob matrix
* pre+impro3  (on Lisal)
* scp -pr cejchan@147.231.140.95:/home/cejchan/4Fridrich/*  /home/pac/4Fridrich
* implement objFns from Pilhofer
* BertinLossDis --> BertinLossSim
* gofmt -r 'BertinLossDis -> BertinLossSim' -w -l .
* /home/pac/live/ext/src/code.google.com/p/ser/cmd/ObjFnPerf/SA/perfectR/pre+impro4/
* /home/pac/live/ext/src/code.google.com/p/ser/cmd/ObjFnPerf/SA/objFns/my/impro/R/500/improRInertia
*Bertin on wagga-wagga
*GAR --> results tables
lisal-nvidia  /home/pac/live/ext/src/code.google.com/p/ser/cmd/ObjFnPerf/SA/objFns/Kostop/*/iR
lisal-nvidia  /home/pac/live/ext/src/code.google.com/p/ser/cmd/ObjFnPerf/SA/objFns/Bertin/*/iR
GAR on kangaroo2
H, Ine, Lsq on IR
[cejchan@lisal-nvidia ~] Rimpro500
pac@wagga-wagga:~/II50
Results of  GAR, RGAR into 20 spreadsheet


== beyond my skills
rewrite FA with mutators
implement GA

